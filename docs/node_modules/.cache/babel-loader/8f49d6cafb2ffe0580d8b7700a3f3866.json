{"ast":null,"code":"var _jsxFileName = \"/home/steven/Escritorio/documentos/Programing/JavaScript/Reactjs/giffy/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport getGifs from './services/getGifs.js';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gifs: []\n    };\n  }\n\n  componentDidMount() {\n    const gifs = getGifs({\n      keyword: 'panda'\n    });\n    this.setState({\n      gifs: gifs\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"App-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, this.state.gifs.map(singleGif => {\n      const {\n        title,\n        id,\n        url\n      } = singleGif;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }\n      }, title), /*#__PURE__*/React.createElement(\"small\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }\n      }, id), /*#__PURE__*/React.createElement(\"img\", {\n        src: url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }\n      }));\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/steven/Escritorio/documentos/Programing/JavaScript/Reactjs/giffy/src/App.js"],"names":["React","getGifs","App","Component","state","gifs","componentDidMount","keyword","setState","render","map","singleGif","title","id","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAGA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACJC,MAAAA,IAAI,EAAE;AADF,KADwB;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAE;AACjB,UAAMD,IAAI,GAAGJ,OAAO,CAAC;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAD,CAApB;AACA,SAAKC,QAAL,CAAc;AAAEH,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,GAAhB,CAAoBC,SAAS,IAAI;AAC/B,YAAM;AAACC,QAAAA,KAAD;AAAQC,QAAAA,EAAR;AAAYC,QAAAA;AAAZ,UAAmBH,SAAzB;AACA,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,KAAL,CADM,eAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQC,EAAR,CAFM,eAGN;AAAK,QAAA,GAAG,EAAEC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHM,CAAR;AAKD,KAPD,CAFJ,CADF,CADF;AAgBD;;AA3B6B;;AA8BlC,eAAeZ,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport getGifs from './services/getGifs.js';\n\n\nclass App extends React.Component {\n  state = {\n      gifs: []\n  }\n\n  componentDidMount(){\n    const gifs = getGifs({ keyword: 'panda' });\n    this.setState({ gifs: gifs });\n  }\n\n  render (){\n      return (\n        <div className=\"App\">\n          <section className=\"App-content\">\n            {\n              this.state.gifs.map(singleGif => {\n                const {title, id, url} = singleGif;\n                return (<div>\n                  <h5>{title}</h5>\n                  <small>{id}</small>\n                  <img src={url} />\n                </div>)\n              })\n            }\n           </section >\n        </div>\n       );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}